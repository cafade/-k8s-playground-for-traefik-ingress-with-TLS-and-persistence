apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-volume
  namespace: nginx
  labels:
    storage.k8s.io/name: nfs
spec:
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
    - ReadWriteMany
  capacity:
    storage: 1Gi
  storageClassName: ""
  persistentVolumeReclaimPolicy: Recycle
  volumeMode: Filesystem
  mountOptions:
    - nfsvers=4.1
  nfs:
    server: 10.0.0.34
    path: /data
    readOnly: no
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-nginx
  namespace: nginx
  labels:
    storage.k8s.io/name: nfs
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-webserver
  namespace: nginx
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: nginx-webserver
  template:
    metadata:
      labels:
        app: nginx-webserver
    spec:
      containers:
      - name: nginx-webserver-pod
        image: nginx:latest
        ports:
          - name: web
            containerPort: 80
        volumeMounts:
          - name: nfs-volume
            mountPath: /usr/share/nginx/html
            subPath: html
          - name: nfs-volume
            mountPath: /etc/nginx
            subPath: etc
      volumes:
      - name: nfs-volume
        persistentVolumeClaim:
          claimName: nfs-nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx
spec:
  selector:
    app: nginx-webserver
  # type: NodePort
  ports:
    - targetPort: 80
      port: 80
      # nodePort: 32313
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-service
#   namespace: nginx
# spec:
#   selector:
#     app: nginx-webserver
#   type: ClusterIP
#   ports:
#     - port: 80
